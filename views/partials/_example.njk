{% macro example(params) %}
{% set exampleRoot = "src/" + params.group + "/" + params.item + "/" + params.example + "/" %}
{% if params.customCode %}
  {% set examplePath = exampleRoot + "code.njk" %}
{% else %}
  {% set examplePath = exampleRoot + "index.njk" %}
{% endif %}
{% set exampleURL = "/" + params.group + "/" + params.item + "/" + params.example + "/index.html" %}
{% set exampleId = params.id | default("example-" + params.example) %}
{% set exampleTitle = getFrontmatter(examplePath).title %}
{% if params.open %}
  {% set exampleId = exampleId + '-open' %}
{% endif %}

{% set multipleTabs = params.html and params.nunjucks %}

<div class="app-example-wrapper" id="{{ exampleId }}" data-module="app-tabs">
  <div class="app-example {{ "app-example--tabs" if params.html or params.nunjucks }}">
    <span class="app-example__new-window">
      <a href="{{ exampleURL }}" target="_blank">
        Open this
        <span class="govuk-visually-hidden"> "{{ exampleTitle }}" </span>
        example in a new window
      </a>
    </span>
    <iframe title="{{ exampleTitle }}" data-module="app-example-frame" class="app-example__frame app-example__frame--resizable{% if params.size %} app-example__frame--{{ params.size }}{% endif %}" src="{{ exampleURL }}" frameBorder="0"></iframe>
  </div>

  {%- if (multipleTabs) %}
  <span id="options-{{ exampleId }}"></span>
  <ul class="app-tabs" role="tablist">
    <li class="app-tabs__item js-tabs__item{{ " js-tabs__item--open" if (params.open) }}" role="presentation"><a href="#{{ exampleId }}-html" role="tab" aria-controls="{{ exampleId }}-html" data-track="tab-html">HTML</a></li>
    <li class="app-tabs__item js-tabs__item" role="presentation"><a href="#{{ exampleId }}-nunjucks" role="tab" aria-controls="{{ exampleId }}-nunjucks" data-track="tab-nunjucks">Nunjucks</a></li>
  </ul>
  {% elif not (params.hideTab) %}
  {% set tabType = "html" if params.html else ("nunjucks" if params.nunjucks ) %}
  {#- if at least one tab is set to true show the list -#}
  {% if tabType %}
  <ul class="app-tabs" role="tablist">
    <li class="app-tabs__item js-tabs__item{{ " js-tabs__item--open" if (params.open) }}" role="presentation">
      <a href="#{{ exampleId }}-{{ tabType }}" role="tab" aria-controls="{{ exampleId }}-{{ tabType }}" data-track="tab-{{ tabType }}">{{ "HTML" if params.html else ("Nunjucks" if params.nunjucks )}}</a>
    </li>
  </ul>
  {% endif %}
  {% endif %}

  {%- if (params.html) %}
  {%- if (multipleTabs) or (not params.hideTab) %}
  <div class="app-tabs__heading js-tabs__heading{{ " js-tabs__heading--open" if (params.open) }}"><a href="#{{ exampleId }}-html" role="tab" aria-controls="{{ exampleId }}-html" data-track="tab-html">HTML</a></div>
  {% endif %}
  <div class="app-tabs__container js-tabs__container{{ " js-tabs__container--no-tabs" if (params.hideTab) }}" id="{{ exampleId }}-html" role="tabpanel">
    <pre data-module="app-copy"><code class="hljs html">
      {{- getHTMLCode(examplePath) | highlight('html') | safe -}}
    </code></pre>
  </div>
  {% endif %}

  {%- if (params.nunjucks) %}
  {%- if (multipleTabs) %}
  <div class="app-tabs__heading js-tabs__heading"><a href="#{{ exampleId }}-nunjucks" role="tab" aria-controls="{{ exampleId }}-nunjucks" data-track="tab-nunjucks">Nunjucks</a></div>
  {% elif not (params.hideTab) %}
	<div class="app-tabs__heading js-tabs__heading{{ " js-tabs__heading--open" if (params.open) }}"><a href="#{{ exampleId }}-nunjucks" role="tab" aria-controls="{{ exampleId }}-nunjucks" data-track="tab-nunjucks">Nunjucks</a></div>
  {% endif %}
  <div class="app-tabs__container js-tabs__container{{ " js-tabs__container--no-tabs" if (params.hideTab) }}" id="{{ exampleId }}-nunjucks" role="tabpanel">
    {%- if (params.group == 'components') %}
      {% set macroOptions = getMacroOptions(params.item, exampleId) %}

      {% set macroOptionsHTML %}

        <p>
        Use options to customise the appearance, content and behaviour of a component when using a macro, for example, changing the text.
        </p>
        <p>
        Some options are required for the macro to work; these are marked as "Required" in the option description.
        </p>
        <p>
        If you're using Nunjucks macros in production with "html" options, or ones ending with "html", you must sanitise the HTML to protect against  <a href="https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting">cross-site scripting exploits</a>.
        </p>

        {% for table in macroOptions %}
          <table class="govuk-table app-options__table" id="options-{{ exampleId }}--{{ table.id }}">
            <caption class="govuk-table__caption govuk-heading-m {% if table.id == 'primary' %} govuk-visually-hidden{% endif %}">{{ table.name }}</caption>
            <thead class="govuk-table__head">
              <tr class="govuk-table__row">
                <th class="govuk-table__header app-options__limit-table-cell" scope="col">Name</th>
                <th class="govuk-table__header app-options__limit-table-cell" scope="col">Type</th>
                <th class="govuk-table__header" scope="col">Description</th>
              </tr>
            </thead>
            <tbody class="govuk-table__body">

              {% for option in table.options %}
                <tr class="govuk-table__row">
                  <th class="govuk-table__header" scope="row">{{option.name}}</th>
                  <td class="govuk-table__cell ">{{option.type}}</td>
                  <td class="govuk-table__cell ">{{option.description | safe}}</td>
                </tr>
              {% endfor %}
            </tbody>
          </table>
        {% endfor %}

      {% endset %}

      {% from "details/macro.njk" import govukDetails %}

      {{ govukDetails({
        summaryHtml: "<span data-components='github-component-arguments'>Nunjucks macro options</span>",
        html: macroOptionsHTML,
        classes: "app-options",
        attributes:{
          id: "options-" + exampleId + "-details"
        }
      })}}
    {% endif %}
    <pre data-module="app-copy"><code class="hljs js">
      {{- getNunjucksCode(examplePath) | highlight('js') | safe -}}
    </code></pre>
  </div>
  {% endif %}
</div>

{% endmacro %}
