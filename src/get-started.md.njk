---
title: Get started
layout: layout-single-page-prose.njk
---

# Get started

{% from "_example.njk" import example %}

This guide explains how to create prototypes using the GOV.UK Design System and GOV.UK Prototype Kit.

If you want to use the Design System in production, you’ll need to include GOV.UK Frontend in your project.

Read guidance on how to install [GOV.UK Frontend on GitHub](https://github.com/alphagov/govuk-frontend/blob/master/README.md).

## Before you start

To make prototypes you will need to download and install a new version of the GOV.UK Prototype Kit which has been built to work with the Design System while it’s in private beta.

The installation process is the same as for the current version. You should:

* [download the new version of the GOV.UK Prototype Kit](https://govuk-prototype-kit.herokuapp.com/)
* [follow these installation instructions](https://govuk-prototype-kit.herokuapp.com/docs/install/introduction)

The rest of the guide assumes that you are familar with the GOV.UK Prototype Kit.

## Using the new Prototype Kit

The new version of the Prototype Kit is identical to the one you may have used before except that it uses a new frontend framework called GOV.UK Frontend.

This means that any code that you copy across from old prototypes will not display correctly. Instead, you should use the code provided in the Design System.

## Styling content

The Design System provides lots of new CSS classes for styling content, meaning you shouldn’t need to write as much of your own Sass or CSS.

The class names follow the ["Block, Element, Modifier" (BEM) naming convention](https://en.bem.info/methodology/quick-start/). This can look a bit daunting at first, but it makes for more robust code that’s easier to maintain.

Explore the [Styles section of the Design System](../styles/) to see what classes are available.


## Using components

Components are reusable user interface elements. The components in the Design System are designed to be accessible and responsive.

There are 2 ways to use components in the Design System. You can either use HTML or a Nunjucks Macro.

You can get the code from the HTML or Nunjucks tabs below any examples:

{{ example({group: 'components', item: 'button', example: 'default', html: true, nunjucks: true, open: false}) }}

Copy the code into your prototype where you want the component to appear.


### Using Nunjucks macros

A Nunjucks macro is a simple template that generates more complex HTML.

Nunjucks macros save you time by managing repetitive or error-prone tasks, like linking form labels to their controls.

Nunjucks macros also make it easier to keep your prototypes up to date. You can run a command to update component code instead of having to manually update your HTML.

When using Nunjucks macros in the Prototype Kit:

* omit the first line that starts with "{% raw %}{% from {% endraw %}...".
* save and preview regularly to check that the macro is working
