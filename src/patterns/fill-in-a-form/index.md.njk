---
title: Fill in a form
description: Help users complete a form by only asking for critical information, and designing it to be as easy as possible to fill in.
section: Patterns
theme: Help users to...
aliases:
backlog_issue_id: 50
layout: layout-pane.njk
---

{% from "_example.njk" import example %}

Help users complete a form by only asking for critical information, and designing it to be as easy as possible to fill in.

## When to use this pattern

Follow the guidance in this pattern whenever you need users to fill in a form as a part of your service.

## How it works

### Design your forms for the format they’ll appear in

Paper forms and digital forms have different strengths and weaknesses. Design for both formats with the same amount of care and attention.

Don’t just put paper forms online: the movement from paper to digital is an opportunity to transform how your service is delivered.

### Know why you’re asking every question

Before you start building your form, make a list of all the information you need from your users.

Only add a question if you know:

- you need the information to deliver the service
- why you need the information
- what you’ll do with it
- which users need to give you the information
- how you’ll check the information is accurate
- how to keep the information up to date and secure

This list is called a question protocol. It’s different from the form itself because it’s about how you’ll use the answers.

A question protocol forces you and your organisation to analyse why you’re asking users for each item of information. The protocol helps to sense check your approach and remove unnecessary questions.

If you do need to ask for any optional information, mark the labels of optional fields as ‘(optional)’. Don’t mark mandatory fields with asterisks.

### Design for the most common scenarios first

Once you have a question protocol, you can decide how to order your questions.
Start with questions that will let users know if they’re not eligible for the service, so you don’t waste people’s time.

If there are complicated eligibility requirements, follow the pattern to help users [Check a service is suitable](../check-a-service-is-suitable/).

Use ‘branching’ questions so people only have to answer questions that are relevant to them.
Make sure you know the relative size of your different user groups and how your decisions will affect them.

### Start with one thing per page

If your service is used infrequently by people without a broad range of digital skills and confidence, they may struggle to complete complicated forms.

Start by splitting the form across multiple pages with each page containing only one thing, for example:

- one piece of information you’re telling a user
- one decision they have to make
- one question they have to answer

User research will tell you when you can merge pages together.

Starting with one thing on a page helps people to:

- understand what you’re asking them to do
- focus on the specific question and its answer
- find their way through an unfamiliar process
- use the service on a mobile device
- recover easily from form errors

It also helps you to:

- save users’ answers automatically as they go
- capture analytics about each question
- handle branching questions and loops

[Try the Register to vote service on GOV.UK](https://www.gov.uk/register-to-vote) to see an example of this approach.

Read more about designing [Question pages](../question-pages).

### Providing help text
You should do everything you can to make sure your form is simple and doesn’t need further explaining.

However, there may be times when you need to add help text to explain:

- legal jargon
- unfamiliar concepts
- where to find information on other documents, such as an application reference number
- what format the information should be given in
- what you’ll do with a user’s personal information
- the consequences of making one choice over another

Don’t explain the interface. If you have to do that, you haven’t made your service simple enough. If you find yourself writing things like ‘Click on the green button at the bottom of the screen’ you know the interface needs work.

When writing help text, you should:

- keep it short and simple, as users are unlikely to read anything longer than 3 lines
- focus on the action the user must do &ndash; make it relevant to their current situation
- avoid giving background information that’s useless to users, like ‘this used to be called X but in 2008 it was changed to Y’

<a name="hint-text"></a>
Hint text is short, clear text positioned immediately next to the part of the page it relates to. You can use hint text for help that’s relevant to the majority of your users, for example:

{{ example({group: 'patterns', item: 'fill-in-a-form', example: 'hint', html: true, nunjucks: true, open: false}) }}

You should place inline help for form fields between the label and the field so sighted users and screenreaders can read it before they get to the field itself.

If you need to provide information that only some users will need, you can use the Details component. This is a short link that expands into more detailed help when a user clicks on it, for example:

{{ example({group: 'patterns', item: 'fill-in-a-form', example: 'details', html: true, nunjucks: true, open: false}) }}

Use the [Details](../../components/details) component to make your page easier to scan, but don’t hide help if a majority of users will need it.

Make sure the link text is written so that users can quickly work out if they need to click on it.


### Using progress indicators

Start by testing your form without a progress indicator to see if it’s simple enough that users don’t need one.

Try improving the order, type or number of questions before adding a progress indicator. If people still have difficulty, try adding a simple step or question indicator like this one.

{{ example({group: 'patterns', item: 'fill-in-a-form', example: 'progress', html: true, nunjucks: true, open: false}) }}

Only include the total number of questions if you can do so reliably. As the user moves through the form, make sure the indicator updates to tell them which question they are on and the total number remaining.

Don’t use this type of progress indicator:

![Horizontal progress indicator](progress_indicators_horizontal.png)

These can be problematic because they:
- are often not noticed
- take up lots of space
- don’t scale well on small screens
- can distract and confuse some users
- make it hard to write good labels for the steps
- make it hard to handle conditional sections

A number of GOV.UK services have removed this style of progress indicator without any negative effects.
Read a blog post about [how the Carer’s Allowance team removed a 12-step progress indicator](https://designnotes.blog.gov.uk/2014/07/07/do-less-problems-as-shared-spaces/) with no effect on completion rates or times.


## Research on this pattern

Learn more about the [question protocol](https://www.uxmatters.com/mt/archives/2010/06/the-question-protocol-how-to-make-sure-every-form-field-is-necessary.php).

Read a blog post about [how the Register to vote service used forms](https://designnotes.blog.gov.uk/2014/07/14/things-we-learnt-designing-register-to-vote/).
